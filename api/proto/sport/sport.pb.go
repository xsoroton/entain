// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.6.1
// source: sport/sport.proto

package sport

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request for GetSport call
type GetSportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetSportRequest) Reset() {
	*x = GetSportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sport_sport_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSportRequest) ProtoMessage() {}

func (x *GetSportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sport_sport_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSportRequest.ProtoReflect.Descriptor instead.
func (*GetSportRequest) Descriptor() ([]byte, []int) {
	return file_sport_sport_proto_rawDescGZIP(), []int{0}
}

func (x *GetSportRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Response for GetSport call
type GetSportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sport *Sport `protobuf:"bytes,1,opt,name=sport,proto3" json:"sport,omitempty"`
}

func (x *GetSportResponse) Reset() {
	*x = GetSportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sport_sport_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSportResponse) ProtoMessage() {}

func (x *GetSportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sport_sport_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSportResponse.ProtoReflect.Descriptor instead.
func (*GetSportResponse) Descriptor() ([]byte, []int) {
	return file_sport_sport_proto_rawDescGZIP(), []int{1}
}

func (x *GetSportResponse) GetSport() *Sport {
	if x != nil {
		return x.Sport
	}
	return nil
}

// Request for ListSports call.
type ListSportsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter *ListSportsRequestFilter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *ListSportsRequest) Reset() {
	*x = ListSportsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sport_sport_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSportsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSportsRequest) ProtoMessage() {}

func (x *ListSportsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sport_sport_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSportsRequest.ProtoReflect.Descriptor instead.
func (*ListSportsRequest) Descriptor() ([]byte, []int) {
	return file_sport_sport_proto_rawDescGZIP(), []int{2}
}

func (x *ListSportsRequest) GetFilter() *ListSportsRequestFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

// Response to ListSports call.
type ListSportsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sports []*Sport `protobuf:"bytes,1,rep,name=sports,proto3" json:"sports,omitempty"`
}

func (x *ListSportsResponse) Reset() {
	*x = ListSportsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sport_sport_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSportsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSportsResponse) ProtoMessage() {}

func (x *ListSportsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sport_sport_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSportsResponse.ProtoReflect.Descriptor instead.
func (*ListSportsResponse) Descriptor() ([]byte, []int) {
	return file_sport_sport_proto_rawDescGZIP(), []int{3}
}

func (x *ListSportsResponse) GetSports() []*Sport {
	if x != nil {
		return x.Sports
	}
	return nil
}

// Filter for listing sports.
type ListSportsRequestFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MeetingIds      []int64 `protobuf:"varint,1,rep,packed,name=meeting_ids,json=meetingIds,proto3" json:"meeting_ids,omitempty"`
	VisibleOnly     bool    `protobuf:"varint,2,opt,name=visible_only,json=visibleOnly,proto3" json:"visible_only,omitempty"`
	SortByFieldName string  `protobuf:"bytes,3,opt,name=sort_by_field_name,json=sortByFieldName,proto3" json:"sort_by_field_name,omitempty"`
}

func (x *ListSportsRequestFilter) Reset() {
	*x = ListSportsRequestFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sport_sport_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSportsRequestFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSportsRequestFilter) ProtoMessage() {}

func (x *ListSportsRequestFilter) ProtoReflect() protoreflect.Message {
	mi := &file_sport_sport_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSportsRequestFilter.ProtoReflect.Descriptor instead.
func (*ListSportsRequestFilter) Descriptor() ([]byte, []int) {
	return file_sport_sport_proto_rawDescGZIP(), []int{4}
}

func (x *ListSportsRequestFilter) GetMeetingIds() []int64 {
	if x != nil {
		return x.MeetingIds
	}
	return nil
}

func (x *ListSportsRequestFilter) GetVisibleOnly() bool {
	if x != nil {
		return x.VisibleOnly
	}
	return false
}

func (x *ListSportsRequestFilter) GetSortByFieldName() string {
	if x != nil {
		return x.SortByFieldName
	}
	return ""
}

// A sport resource.
type Sport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID represents a unique identifier for the sport.
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// MeetingID represents a unique identifier for the sports meeting.
	MeetingId int64 `protobuf:"varint,2,opt,name=meeting_id,json=meetingId,proto3" json:"meeting_id,omitempty"`
	// Name is the official name given to the sport.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// Number represents the number of the sport.
	Number int64 `protobuf:"varint,4,opt,name=number,proto3" json:"number,omitempty"`
	// Visible represents whether or not the sport is visible.
	Visible bool `protobuf:"varint,5,opt,name=visible,proto3" json:"visible,omitempty"`
	// AdvertisedStartTime is the time the sport is advertised to run.
	AdvertisedStartTime *timestamp.Timestamp `protobuf:"bytes,6,opt,name=advertised_start_time,json=advertisedStartTime,proto3" json:"advertised_start_time,omitempty"`
	// Sport status e.g. OPEN, CLOSED
	Status string `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *Sport) Reset() {
	*x = Sport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sport_sport_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sport) ProtoMessage() {}

func (x *Sport) ProtoReflect() protoreflect.Message {
	mi := &file_sport_sport_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sport.ProtoReflect.Descriptor instead.
func (*Sport) Descriptor() ([]byte, []int) {
	return file_sport_sport_proto_rawDescGZIP(), []int{5}
}

func (x *Sport) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Sport) GetMeetingId() int64 {
	if x != nil {
		return x.MeetingId
	}
	return 0
}

func (x *Sport) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Sport) GetNumber() int64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *Sport) GetVisible() bool {
	if x != nil {
		return x.Visible
	}
	return false
}

func (x *Sport) GetAdvertisedStartTime() *timestamp.Timestamp {
	if x != nil {
		return x.AdvertisedStartTime
	}
	return nil
}

func (x *Sport) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_sport_sport_proto protoreflect.FileDescriptor

var file_sport_sport_proto_rawDesc = []byte{
	0x0a, 0x11, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x21, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x53, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x36, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x22, 0x0a, 0x05, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x05, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x22, 0x4b, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x6f, 0x72,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x06, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x70, 0x6f, 0x72,
	0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x22, 0x3a, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x06, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x53, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x06, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x22, 0x8a, 0x01,
	0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x65,
	0x74, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0a,
	0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x69,
	0x73, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x2b, 0x0a,
	0x12, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x6f, 0x72, 0x74, 0x42,
	0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xe4, 0x01, 0x0a, 0x05, 0x53,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e,
	0x67, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x12, 0x4e, 0x0a, 0x15, 0x61, 0x64, 0x76,
	0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x13, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x64,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x32, 0xbc, 0x01, 0x0a, 0x06, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x53, 0x0a, 0x08,
	0x47, 0x65, 0x74, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x2e, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x17, 0x2e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x70, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x10, 0x12, 0x0e, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x7b, 0x69, 0x64,
	0x7d, 0x12, 0x5d, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12,
	0x18, 0x2e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x6f, 0x72,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x73, 0x70, 0x6f, 0x72,
	0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x22, 0x0f, 0x2f, 0x76,
	0x31, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x2d, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x3a, 0x01, 0x2a,
	0x42, 0x08, 0x5a, 0x06, 0x2f, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_sport_sport_proto_rawDescOnce sync.Once
	file_sport_sport_proto_rawDescData = file_sport_sport_proto_rawDesc
)

func file_sport_sport_proto_rawDescGZIP() []byte {
	file_sport_sport_proto_rawDescOnce.Do(func() {
		file_sport_sport_proto_rawDescData = protoimpl.X.CompressGZIP(file_sport_sport_proto_rawDescData)
	})
	return file_sport_sport_proto_rawDescData
}

var file_sport_sport_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_sport_sport_proto_goTypes = []interface{}{
	(*GetSportRequest)(nil),         // 0: sport.GetSportRequest
	(*GetSportResponse)(nil),        // 1: sport.GetSportResponse
	(*ListSportsRequest)(nil),       // 2: sport.ListSportsRequest
	(*ListSportsResponse)(nil),      // 3: sport.ListSportsResponse
	(*ListSportsRequestFilter)(nil), // 4: sport.ListSportsRequestFilter
	(*Sport)(nil),                   // 5: sport.Sport
	(*timestamp.Timestamp)(nil),     // 6: google.protobuf.Timestamp
}
var file_sport_sport_proto_depIdxs = []int32{
	5, // 0: sport.GetSportResponse.sport:type_name -> sport.Sport
	4, // 1: sport.ListSportsRequest.filter:type_name -> sport.ListSportsRequestFilter
	5, // 2: sport.ListSportsResponse.sports:type_name -> sport.Sport
	6, // 3: sport.Sport.advertised_start_time:type_name -> google.protobuf.Timestamp
	0, // 4: sport.Sports.GetSport:input_type -> sport.GetSportRequest
	2, // 5: sport.Sports.ListSports:input_type -> sport.ListSportsRequest
	1, // 6: sport.Sports.GetSport:output_type -> sport.GetSportResponse
	3, // 7: sport.Sports.ListSports:output_type -> sport.ListSportsResponse
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_sport_sport_proto_init() }
func file_sport_sport_proto_init() {
	if File_sport_sport_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sport_sport_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sport_sport_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sport_sport_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSportsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sport_sport_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSportsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sport_sport_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSportsRequestFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sport_sport_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sport_sport_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sport_sport_proto_goTypes,
		DependencyIndexes: file_sport_sport_proto_depIdxs,
		MessageInfos:      file_sport_sport_proto_msgTypes,
	}.Build()
	File_sport_sport_proto = out.File
	file_sport_sport_proto_rawDesc = nil
	file_sport_sport_proto_goTypes = nil
	file_sport_sport_proto_depIdxs = nil
}
